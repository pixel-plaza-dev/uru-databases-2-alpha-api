// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["strictUndefinedChecks"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  email         String         @unique
  firstName     String
  lastName      String
  password      String
  address       String?
  phone         String?
  refreshTokens RefreshToken[]
  role          UserRole       @default(USER)
}

model AccessToken {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  token          String       @unique
  expiresAt      DateTime     @default(now())
  createdAt      DateTime     @default(now())
  lastUsedAt     DateTime     @default(now())
  valid          Boolean      @default(true)
  refreshToken   RefreshToken @relation(fields: [refreshTokenId], references: [id], onDelete: Cascade)
  refreshTokenId String       @unique @db.ObjectId
}

model RefreshToken {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  token       String       @unique
  createdAt   DateTime     @default(now())
  expiresAt   DateTime     @default(now())
  valid       Boolean      @default(true)
  user        User         @relation(fields: [userId], references: [id])
  userId      String       @db.ObjectId
  accessToken AccessToken?
}

enum UserRole {
  USER
  ADMIN
}
